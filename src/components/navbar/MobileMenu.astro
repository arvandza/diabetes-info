---
import type { NavItem } from '../../types/Nav';

// Single Responsibility: Only renders mobile navigation menu
interface Props {
  items: NavItem[];
  isOpen?: boolean;
  className?: string;
  currentPath?: string;
}

const { 
  items = [], 
  isOpen = false, 
  className = "", 
  currentPath = "" 
} = Astro.props;
---

<div 
  class={`mobile-menu-overlay ${isOpen ? 'active' : ''}`}
  id="mobile-menu-overlay"
  aria-hidden={!isOpen}
>
  <ul 
    class={`mobile-menu ${isOpen ? 'active' : ''} ${className}`}
    id="mobile-menu"
    role="menu"
    aria-label="Mobile navigation"
  >
    {items.map((item) => (
      <li class="mobile-nav-item" role="none">
        <a 
          href={item.href} 
          class={`mobile-nav-link ${currentPath === item.href ? 'active' : ''}`}
          role="menuitem"
          data-mobile-nav-link
        >
          {item.icon && <span class="mobile-nav-icon" aria-hidden="true">{item.icon}</span>}
          <span class="mobile-nav-text">{item.text}</span>
        </a>
      </li>
    ))}
  </ul>
</div>

<style>
  .mobile-menu-overlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100vh;
    background: rgba(0, 0, 0, 0.5);
    backdrop-filter: blur(4px);
    opacity: 0;
    visibility: hidden;
    transition: all var(--transition-speed, 0.3s);
    z-index: 1000;
  }

  .mobile-menu-overlay.active {
    opacity: 1;
    visibility: visible;
  }

  .mobile-menu {
    list-style: none;
    margin: 0;
    padding: 0;
    position: fixed;
    top: 0;
    right: 0;
    width: 280px;
    height: 100vh;
    background: var(--bg-color, #ffffff);
    transform: translateX(100%);
    transition: transform var(--transition-speed, 0.3s);
    overflow-y: auto;
    box-shadow: -4px 0 20px rgba(0, 0, 0, 0.1);
    padding-top: 80px; /* Space for navbar */
  }

  .mobile-menu.active {
    transform: translateX(0);
  }

  .mobile-nav-item {
    border-bottom: 1px solid rgba(0, 0, 0, 0.1);
  }

  .mobile-nav-item:last-child {
    border-bottom: none;
  }

  .mobile-nav-link {
    color: var(--text-color, #1e293b);
    text-decoration: none;
    display: flex;
    align-items: center;
    gap: 1rem;
    padding: 1.25rem 1.5rem;
    width: 100%;
    transition: all var(--transition-speed, 0.3s);
    font-weight: 500;
    position: relative;
  }

  .mobile-nav-link:hover {
    background-color: rgba(37, 99, 235, 0.1);
    color: var(--hover-color, #1d4ed8);
    padding-left: 2rem;
  }

  .mobile-nav-link:focus {
    outline: 2px solid var(--primary-color, #2563eb);
    outline-offset: -2px;
    background-color: rgba(37, 99, 235, 0.1);
  }

  .mobile-nav-link.active {
    background-color: rgba(37, 99, 235, 0.15);
    color: var(--primary-color, #2563eb);
    border-right: 4px solid var(--primary-color, #2563eb);
  }

  .mobile-nav-icon {
    font-size: 1.2rem;
    display: flex;
    align-items: center;
    min-width: 24px;
  }

  .mobile-nav-text {
    flex: 1;
  }

  /* Hide on desktop */
  @media (min-width: 768px) {
    .mobile-menu-overlay {
      display: none;
    }
  }

  /* Animation for menu items */
  .mobile-menu.active .mobile-nav-item {
    animation: slideInFromRight 0.3s ease-out forwards;
  }

  .mobile-menu.active .mobile-nav-item:nth-child(1) { animation-delay: 0.1s; }
  .mobile-menu.active .mobile-nav-item:nth-child(2) { animation-delay: 0.2s; }
  .mobile-menu.active .mobile-nav-item:nth-child(3) { animation-delay: 0.3s; }
  .mobile-menu.active .mobile-nav-item:nth-child(4) { animation-delay: 0.4s; }
  .mobile-menu.active .mobile-nav-item:nth-child(5) { animation-delay: 0.5s; }

  @keyframes slideInFromRight {
    from {
      opacity: 0;
      transform: translateX(20px);
    }
    to {
      opacity: 1;
      transform: translateX(0);
    }
  }
</style>
